# BlockShelf Environment Configuration
# Copy this file to .env and customize for your deployment

# ============================================================================
# Django Core Settings
# ============================================================================

# REQUIRED: Generate a secure key with: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
DJANGO_SECRET_KEY=CHANGE_ME

# Debug mode (never enable in production!)
DEBUG=False

# Allowed hosts (comma-separated, no spaces)
ALLOWED_HOSTS=your.domain.com,localhost,127.0.0.1

# CSRF trusted origins (comma-separated, include protocol)
CSRF_TRUSTED_ORIGINS=https://your.domain.com

# Time zone
TIME_ZONE=Europe/Brussels

# ============================================================================
# Database Configuration
# ============================================================================

# PostgreSQL (recommended for production)
DATABASE_URL=postgres://blockshelf:CHANGE_ME@localhost:5432/blockshelf
# (URL-encode special characters in the password)

# For Docker Compose, these are used separately
POSTGRES_DB=blockshelf
POSTGRES_USER=blockshelf
POSTGRES_PASSWORD=CHANGE_ME

# ============================================================================
# Cache Configuration (Redis - Optional)
# ============================================================================

# Redis URL (optional, enables caching)
REDIS_URL=redis://localhost:6379/0

# ============================================================================
# Gunicorn Configuration
# ============================================================================

# Bind address
GUNICORN_BIND=unix:/run/blockshelf/blockshelf.sock
# For Docker, use: GUNICORN_BIND=0.0.0.0:8000

# Number of worker processes (formula: CPU cores * 2 + 1)
GUNICORN_WORKERS=5

# Worker class (sync, gevent, eventlet, gthread)
GUNICORN_WORKER_CLASS=sync

# Worker timeout (seconds)
GUNICORN_TIMEOUT=60

# Graceful shutdown timeout (seconds)
GUNICORN_GRACEFUL_TIMEOUT=30

# Max requests per worker before restart
GUNICORN_MAX_REQUESTS=1000

# Max requests jitter (prevents all workers restarting at once)
GUNICORN_MAX_REQUESTS_JITTER=50

# Log level (debug, info, warning, error, critical)
GUNICORN_LOG_LEVEL=info

# Access log (use '-' for stdout)
GUNICORN_ACCESS_LOG=-

# Error log (use '-' for stderr)
GUNICORN_ERROR_LOG=-

# ============================================================================
# Sentry Monitoring (Optional)
# ============================================================================

# Sentry DSN (get from sentry.io project settings)
SENTRY_DSN=

# Environment name (production, staging, development)
SENTRY_ENVIRONMENT=production

# Performance tracing sample rate (0.0 to 1.0)
SENTRY_TRACES_SAMPLE_RATE=0.1

# Profiling sample rate (0.0 to 1.0)
SENTRY_PROFILES_SAMPLE_RATE=0.1

# Release version (optional, for tracking deployments)
SENTRY_RELEASE=

# ============================================================================
# Email Configuration
# ============================================================================

# Email backend
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
# For production SMTP: EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend

# SMTP settings (if using SMTP backend)
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_HOST_USER=your-email@gmail.com
# EMAIL_HOST_PASSWORD=your-app-password

# From email address
DEFAULT_FROM_EMAIL=noreply@example.com

# ============================================================================
# Security Settings (Production)
# ============================================================================

# SSL/HTTPS settings (only enable if using HTTPS)
SECURE_SSL_REDIRECT=True
SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True

# HSTS (HTTP Strict Transport Security)
SECURE_HSTS_SECONDS=2592000  # 30 days
SECURE_HSTS_INCLUDE_SUBDOMAINS=True
SECURE_HSTS_PRELOAD=True

# Referrer policy
SECURE_REFERRER_POLICY=same-origin

# ============================================================================
# File Upload Limits
# ============================================================================

# Max upload size for forms (bytes)
DATA_UPLOAD_MAX_MEMORY_SIZE=10485760  # 10MB

# Max file upload size (bytes)
FILE_UPLOAD_MAX_MEMORY_SIZE=10485760  # 10MB

# Max upload size for Rebrickable ZIP files (bytes)
MAX_UPLOAD_SIZE=52428800  # 50MB

# ============================================================================
# Docker Compose Specific
# ============================================================================

# HTTP port (exposed by Nginx)
HTTP_PORT=80

# HTTPS port (exposed by Nginx)
HTTPS_PORT=443

# ============================================================================
# Auth / Allauth
# ============================================================================

# Email verification
ACCOUNT_EMAIL_VERIFICATION=none
ACCOUNT_EMAIL_REQUIRED=false

# Allow new user registration
ALLOW_REGISTRATION=True

# ============================================================================
# Optional Integrations
# ============================================================================

# Rebrickable API key (can also be set via GUI)
REBRICKABLE_API_KEY=

# Google OAuth (can also be set via GUI)
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
